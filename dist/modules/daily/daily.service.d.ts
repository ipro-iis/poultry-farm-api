import type { Prisma } from "@prisma/client";
export declare function listByFarm(farmId: string): Promise<unknown>;
/**
 * Add a single daily input (for farms already in "using" status)
 */
export declare function add(input: {
    farmId: string;
    inputDate: Date;
    dayIndex: number;
    chicken?: any;
    deathLoss?: any;
    deathSale?: any;
    discardSale?: any;
    goodSale?: any;
    chickenManure?: any;
    pesticides?: any;
    riceHusk?: any;
    charcoal?: any;
    sugar?: any;
    food?: any;
    medicine?: any;
    strengthMedicine?: any;
    vaccine?: any;
    laborFee?: any;
    other?: any;
    remark?: string | null;
}): Promise<{
    id: string;
    createdAt: Date;
    remark: string | null;
    farmId: string;
    farmCycleId: string;
    inputDate: Date;
    dayIndex: number;
    chicken: Prisma.JsonValue | null;
    deathLoss: Prisma.JsonValue | null;
    deathSale: Prisma.JsonValue | null;
    discardSale: Prisma.JsonValue | null;
    goodSale: Prisma.JsonValue | null;
    chickenManure: Prisma.JsonValue | null;
    pesticides: Prisma.JsonValue | null;
    riceHusk: Prisma.JsonValue | null;
    charcoal: Prisma.JsonValue | null;
    sugar: Prisma.JsonValue | null;
    food: Prisma.JsonValue | null;
    medicine: Prisma.JsonValue | null;
    strengthMedicine: Prisma.JsonValue | null;
    vaccine: Prisma.JsonValue | null;
    laborFee: Prisma.JsonValue | null;
    other: Prisma.JsonValue | null;
}>;
/**
 * Add Day 0 + Day 1 together for startup, and set farm status to "using"
 */
export declare function addStartupWithDay1(input: {
    farmId: string;
    day0: Omit<Prisma.DailyInputCreateInput, "farm" | "farmCycle" | "id" | "createdAt">;
    day1: Omit<Prisma.DailyInputCreateInput, "farm" | "farmCycle" | "id" | "createdAt">;
}): Promise<{
    cycle: {
        id: string;
        farmId: string;
        cycleNumber: number;
        startDate: Date;
        endDate: Date | null;
        isActive: boolean;
    };
    day0: {
        id: string;
        createdAt: Date;
        remark: string | null;
        farmId: string;
        farmCycleId: string;
        inputDate: Date;
        dayIndex: number;
        chicken: Prisma.JsonValue | null;
        deathLoss: Prisma.JsonValue | null;
        deathSale: Prisma.JsonValue | null;
        discardSale: Prisma.JsonValue | null;
        goodSale: Prisma.JsonValue | null;
        chickenManure: Prisma.JsonValue | null;
        pesticides: Prisma.JsonValue | null;
        riceHusk: Prisma.JsonValue | null;
        charcoal: Prisma.JsonValue | null;
        sugar: Prisma.JsonValue | null;
        food: Prisma.JsonValue | null;
        medicine: Prisma.JsonValue | null;
        strengthMedicine: Prisma.JsonValue | null;
        vaccine: Prisma.JsonValue | null;
        laborFee: Prisma.JsonValue | null;
        other: Prisma.JsonValue | null;
    };
    day1: {
        id: string;
        createdAt: Date;
        remark: string | null;
        farmId: string;
        farmCycleId: string;
        inputDate: Date;
        dayIndex: number;
        chicken: Prisma.JsonValue | null;
        deathLoss: Prisma.JsonValue | null;
        deathSale: Prisma.JsonValue | null;
        discardSale: Prisma.JsonValue | null;
        goodSale: Prisma.JsonValue | null;
        chickenManure: Prisma.JsonValue | null;
        pesticides: Prisma.JsonValue | null;
        riceHusk: Prisma.JsonValue | null;
        charcoal: Prisma.JsonValue | null;
        sugar: Prisma.JsonValue | null;
        food: Prisma.JsonValue | null;
        medicine: Prisma.JsonValue | null;
        strengthMedicine: Prisma.JsonValue | null;
        vaccine: Prisma.JsonValue | null;
        laborFee: Prisma.JsonValue | null;
        other: Prisma.JsonValue | null;
    };
}>;
export declare function update(id: string, data: Partial<Prisma.DailyInputUpdateInput>): Prisma.Prisma__DailyInputClient<{
    id: string;
    createdAt: Date;
    remark: string | null;
    farmId: string;
    farmCycleId: string;
    inputDate: Date;
    dayIndex: number;
    chicken: Prisma.JsonValue | null;
    deathLoss: Prisma.JsonValue | null;
    deathSale: Prisma.JsonValue | null;
    discardSale: Prisma.JsonValue | null;
    goodSale: Prisma.JsonValue | null;
    chickenManure: Prisma.JsonValue | null;
    pesticides: Prisma.JsonValue | null;
    riceHusk: Prisma.JsonValue | null;
    charcoal: Prisma.JsonValue | null;
    sugar: Prisma.JsonValue | null;
    food: Prisma.JsonValue | null;
    medicine: Prisma.JsonValue | null;
    strengthMedicine: Prisma.JsonValue | null;
    vaccine: Prisma.JsonValue | null;
    laborFee: Prisma.JsonValue | null;
    other: Prisma.JsonValue | null;
}, never, import("@prisma/client/runtime/library").DefaultArgs, Prisma.PrismaClientOptions>;
export declare function updateAndRecalculate(id: string, data: Prisma.DailyInputUpdateInput): Promise<{
    id: string;
    createdAt: Date;
    remark: string | null;
    farmId: string;
    farmCycleId: string;
    inputDate: Date;
    dayIndex: number;
    chicken: Prisma.JsonValue | null;
    deathLoss: Prisma.JsonValue | null;
    deathSale: Prisma.JsonValue | null;
    discardSale: Prisma.JsonValue | null;
    goodSale: Prisma.JsonValue | null;
    chickenManure: Prisma.JsonValue | null;
    pesticides: Prisma.JsonValue | null;
    riceHusk: Prisma.JsonValue | null;
    charcoal: Prisma.JsonValue | null;
    sugar: Prisma.JsonValue | null;
    food: Prisma.JsonValue | null;
    medicine: Prisma.JsonValue | null;
    strengthMedicine: Prisma.JsonValue | null;
    vaccine: Prisma.JsonValue | null;
    laborFee: Prisma.JsonValue | null;
    other: Prisma.JsonValue | null;
}>;
export declare function remove(id: string): Prisma.Prisma__DailyInputClient<{
    id: string;
    createdAt: Date;
    remark: string | null;
    farmId: string;
    farmCycleId: string;
    inputDate: Date;
    dayIndex: number;
    chicken: Prisma.JsonValue | null;
    deathLoss: Prisma.JsonValue | null;
    deathSale: Prisma.JsonValue | null;
    discardSale: Prisma.JsonValue | null;
    goodSale: Prisma.JsonValue | null;
    chickenManure: Prisma.JsonValue | null;
    pesticides: Prisma.JsonValue | null;
    riceHusk: Prisma.JsonValue | null;
    charcoal: Prisma.JsonValue | null;
    sugar: Prisma.JsonValue | null;
    food: Prisma.JsonValue | null;
    medicine: Prisma.JsonValue | null;
    strengthMedicine: Prisma.JsonValue | null;
    vaccine: Prisma.JsonValue | null;
    laborFee: Prisma.JsonValue | null;
    other: Prisma.JsonValue | null;
}, never, import("@prisma/client/runtime/library").DefaultArgs, Prisma.PrismaClientOptions>;
//# sourceMappingURL=daily.service.d.ts.map