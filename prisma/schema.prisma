// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FarmStatus {
  available
  using
  closed
}

model Company {
  id           String   @id @default(uuid())
  name         String
  phoneNo      String   @unique
  emailAddress String   @unique
  password     String
  farms        Farm[]
  createdAt    DateTime @default(now())
}

model Farm {
  id          String       @id @default(uuid())
  farmNo      String
  status      FarmStatus   @default(available)
  companyId   String
  company     Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)
  dailyInputs DailyInput[]
  createdAt   DateTime     @default(now())
}

model DailyInput {
  id               String   @id @default(uuid())
  farmId           String
  farm             Farm     @relation(fields: [farmId], references: [id], onDelete: Cascade)
  inputDate        DateTime
  dayIndex         Int
  feedName         String?
  remark           String?
  deathWithLossQty Int      @default(0)
  balanceQty       Int      @default(0)
  balanceWeight    Float    @default(0)
  createdAt        DateTime @default(now())
  // Store DataInfo payloads as JSON for speed of implementation
  feedData         Json?
  deathWithoutLoss Json?
  discard          Json?
  sale             Json?
  charcoal         Json?
  riceHusk         Json?
  sugar            Json?
  medicine         Json?
  laborFee         Float    @default(0)
}
