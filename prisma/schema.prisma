generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String   @id @default(uuid())
  name         String
  phoneNo      String   @unique
  emailAddress String?
  password     String
  createdAt    DateTime @default(now())
  farms        Farm[]
}

model FarmCycle {
  id          String       @id @default(uuid())
  farmId      String
  cycleNumber Int
  startDate   DateTime
  endDate     DateTime?
  isActive    Boolean      @default(true)
  dailyInputs DailyInput[]
  farm        Farm         @relation(fields: [farmId], references: [id], onDelete: Cascade)
}

model Farm {
  id          String       @id @default(uuid())
  farmNo      String
  remark      String?
  status      FarmStatus   @default(available)
  isInactive  Boolean      @default(false)
  companyId   String
  createdAt   DateTime     @default(now())
  dailyInputs DailyInput[]
  company     Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)
  cycles      FarmCycle[]
}

model DailyInput {
  id               String    @id @default(uuid())
  createdAt        DateTime  @default(now())
  farmId           String
  farmCycleId      String
  inputDate        DateTime
  dayIndex         Int
  chicken          Json?
  deathLoss        Json?
  deathSale        Json?
  discardSale      Json?
  goodSale         Json?
  chickenManure    Json?
  pesticides       Json?
  riceHusk         Json?
  charcoal         Json?
  sugar            Json?
  food             Json?
  medicine         Json?
  strengthMedicine Json?
  vaccine          Json?
  laborFee         Json?
  other            Json?
  remark           String?
  farmCycle        FarmCycle @relation(fields: [farmCycleId], references: [id], onDelete: Cascade)
  farm             Farm      @relation(fields: [farmId], references: [id], onDelete: Cascade)
}

enum FarmStatus {
  available
  using
  closed
}
